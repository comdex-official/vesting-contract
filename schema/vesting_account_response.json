{
  "$schema": "http://json-schema.org/draft-07/schema#",
  "title": "VestingAccountResponse",
  "type": "object",
  "required": [
    "address",
    "vestings"
  ],
  "properties": {
    "address": {
      "type": "string"
    },
    "vestings": {
      "type": "array",
      "items": {
        "$ref": "#/definitions/VestingData"
      }
    }
  },
  "definitions": {
    "Uint128": {
      "description": "A thin wrapper around u128 that is using strings for JSON encoding/decoding, such that the full u128 range can be used for clients that convert JSON numbers to floats, like JavaScript and jq.\n\n# Examples\n\nUse `from` to create instances of this and `u128` to get the value out:\n\n``` # use cosmwasm_std::Uint128; let a = Uint128::from(123u128); assert_eq!(a.u128(), 123);\n\nlet b = Uint128::from(42u64); assert_eq!(b.u128(), 42);\n\nlet c = Uint128::from(70u32); assert_eq!(c.u128(), 70); ```",
      "type": "string"
    },
    "VestingData": {
      "type": "object",
      "required": [
        "claimable_amount",
        "vested_amount",
        "vesting_amount",
        "vesting_denom",
        "vesting_schedule"
      ],
      "properties": {
        "claimable_amount": {
          "$ref": "#/definitions/Uint128"
        },
        "master_address": {
          "type": [
            "string",
            "null"
          ]
        },
        "vested_amount": {
          "$ref": "#/definitions/Uint128"
        },
        "vesting_amount": {
          "$ref": "#/definitions/Uint128"
        },
        "vesting_denom": {
          "type": "string"
        },
        "vesting_schedule": {
          "$ref": "#/definitions/VestingSchedule"
        }
      }
    },
    "VestingSchedule": {
      "oneOf": [
        {
          "description": "LinearVesting is used to vest tokens linearly during a time period. The total_amount will be vested during this period.",
          "type": "object",
          "required": [
            "linear_vesting"
          ],
          "properties": {
            "linear_vesting": {
              "type": "object",
              "required": [
                "end_time",
                "start_time",
                "vesting_amount"
              ],
              "properties": {
                "end_time": {
                  "type": "integer",
                  "format": "uint64",
                  "minimum": 0.0
                },
                "start_time": {
                  "type": "integer",
                  "format": "uint64",
                  "minimum": 0.0
                },
                "vesting_amount": {
                  "$ref": "#/definitions/Uint128"
                }
              }
            }
          },
          "additionalProperties": false
        },
        {
          "description": "PeriodicVesting is used to vest tokens at regular intervals for a specific period. To minimize calculation error, (end_time - start_time) should be multiple of vesting_interval deposit_amount = amount * ((end_time - start_time) / vesting_interval + 1)",
          "type": "object",
          "required": [
            "periodic_vesting"
          ],
          "properties": {
            "periodic_vesting": {
              "type": "object",
              "required": [
                "amount",
                "end_time",
                "start_time",
                "vesting_interval"
              ],
              "properties": {
                "amount": {
                  "$ref": "#/definitions/Uint128"
                },
                "end_time": {
                  "type": "integer",
                  "format": "uint64",
                  "minimum": 0.0
                },
                "start_time": {
                  "type": "integer",
                  "format": "uint64",
                  "minimum": 0.0
                },
                "vesting_interval": {
                  "type": "integer",
                  "format": "uint64",
                  "minimum": 0.0
                }
              }
            }
          },
          "additionalProperties": false
        }
      ]
    }
  }
}
